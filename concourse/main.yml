
resources:
- name: anubot
  type: git
  source:
    uri: https://github.com/jasonkeene/anubot
    branch: master

- name: api-image
  type: docker-image
  source:
    repository: anubot/api
    username: {{docker_hub_username}}
    password: {{docker_hub_password}}

- name: api-image-dockerfile
  type: git
  source:
    uri: https://github.com/jasonkeene/anubot-ci
    branch: master
    paths:
    - docker-images/api

jobs:
- name: test
  public: true
  plan:
  - get: anubot
    trigger: true
  - task: test
    config:
      image_resource:
        type: docker-image
        source:
          repository: anubot/build
          tag: latest
      platform: linux
      inputs:
      - name: anubot
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          set -e

          cd anubot
          export GOPATH=$PWD
          export PATH=$PWD/bin:$PWD/app/node_modules/.bin:$PATH
          ./test.sh ci

- name: build
  public: true
  plan:
  - aggregate:
    - get: anubot
      trigger: true
      passed:
      - test
    - get: api-image-dockerfile
      trigger: true
  - aggregate:
    - task: build-api
      config:
        image_resource:
          type: docker-image
          source:
            repository: anubot/build
            tag: latest
        platform: linux
        inputs:
        - name: anubot
        outputs:
        - name: api
        run:
          path: bash
          args:
          - -c
          - |
            #!/bin/bash
            set -e

            export GOPATH=$PWD/anubot
            GOOS=linux GOARCH=amd64 go build -o api/api_linux_amd64 anubot/cmd/api
  - task: upload-artifacts
    config:
      image_resource:
        type: docker-image
        source:
          repository: anubot/aws
          tag: latest
      platform: linux
      inputs:
      - name: anubot
      - name: api
      params:
        AWS_ACCESS_KEY_ID: {{s3_access_key_id}}
        AWS_SECRET_ACCESS_KEY: {{s3_secret_access_key}}
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          set -e

          pushd anubot > /dev/null
            sha=$(git rev-parse @)
          popd > /dev/null

          mkdir "$sha"
          cp -R api "$sha/"

          aws s3 sync "$sha" "s3://anubot/builds/$sha"
  - task: build-api-image
    config:
      image_resource:
        type: docker-image
        source:
          repository: anubot/build
          tag: latest
      platform: linux
      inputs:
      - name: anubot
      - name: api
      - name: api-image-dockerfile
      outputs:
      - name: build-api-image
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          set -e

          mkdir build-api-image/build
          cp -R api-image-dockerfile/docker-images/api/* build-api-image/build/

          cp api/api_linux_amd64 build-api-image/build/api

          pushd anubot > /dev/null
            sha=$(git rev-parse @)
          popd > /dev/null
          echo "$sha" > build-api-image/tag
  - put: api-image
    params:
      build: build-api-image/build
      tag: build-api-image/tag
      tag_as_latest: true
      cache: true
      cache_tag: latest

- name: deploy
  public: true
  plan:
  - get: anubot
    trigger: true
    passed:
    - build
  - task: deploy
    config:
      image_resource:
        type: docker-image
        source:
          repository: anubot/build
          tag: latest
      platform: linux
      inputs:
      - name: anubot
      params:
        PROD_KEY: {{prod_key}}
      run:
        path: bash
        args:
        - -c
        - |
          #!/bin/bash
          set -e

          pushd anubot > /dev/null
            sha=$(git rev-parse @)
          popd > /dev/null

          mkdir -p ~/.ssh
          ssh-keyscan -Hp 42224 anubot.io >> ~/.ssh/known_hosts
          echo "$PROD_KEY" > id_rsa
          chmod 400 id_rsa
          echo "API_TAG=$sha" | ssh core@anubot.io -i id_rsa -p 42224 "cat > /home/core/api-env; sudo systemctl restart api"
